// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250902113339_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Entity.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Primary Key. Auto-incremented.");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()")
                        .HasComment("Timestamp when the car was created.");

                    b.Property<int>("ManufactureYear")
                        .HasColumnType("integer")
                        .HasComment("Year the car was manufactured.");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("integer")
                        .HasComment("FK referencing the Manufacturer of this car.");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasComment("Car model name (e.g., Corolla, X5).");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("Price of the car.");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasComment("Number of cars available in stock.");

                    b.HasKey("Id")
                        .HasName("cars_pkey");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Cars", null, t =>
                        {
                            t.HasComment("Stores information about cars.");
                        });
                });

            modelBuilder.Entity("Data.Entity.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Primary Key. Auto-incremented.");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasComment("Country where the manufacturer is based.");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()")
                        .HasComment("Timestamp when the manufacturer was created.");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasComment("Name of the manufacturer (e.g., Toyota, BMW).");

                    b.HasKey("Id")
                        .HasName("manufacturers_pkey");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Manufacturers", null, t =>
                        {
                            t.HasComment("Stores car manufacturer information.");
                        });
                });

            modelBuilder.Entity("Data.Entity.Car", b =>
                {
                    b.HasOne("Data.Entity.Manufacturer", "Manufacturer")
                        .WithMany("Cars")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("cars_manufacturerid_fkey");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Data.Entity.Manufacturer", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
